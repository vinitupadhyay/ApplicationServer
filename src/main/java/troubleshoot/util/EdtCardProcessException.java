/*
 * File: EdtCardProcessException.java
 *
 * Desc: Edt card processing exception.
 *
 * Gilbarco Inc. 2008
 *
 * History:
 *    2008.07.24.thur.Yogesh Kotkar  v01.0.01
 *       - Created.
 */

//----------------------------------------------------------------------
package troubleshoot.util;

//----------------------------------------------------------------------

//----------------------------------------------------------------------
/** Edt card data processing exception. <p>*/
public class EdtCardProcessException
extends Exception
{
    // ******************************************************************
    // PUBLIC FIELDS.
    // ******************************************************************

    // ******************************************************************
    // PROTECTED FIELDS.
    // ******************************************************************

    // ******************************************************************
    // PRIVATE FIELDS.
    // ******************************************************************

	 private static final long serialVersionUID = 1L;

    // ******************************************************************
    // CONSTRUCTOR.
    // ******************************************************************

    // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    /**
     * Create. <p>
     */
    public EdtCardProcessException()
    {
    	super("Edt card processing exception");
    }

    // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    /**
     * Create. <p>
     *
     * @param message Exception msg.
     */
    public EdtCardProcessException(String message)
    {
        super("\n" + message);
    }

    // ******************************************************************
    // FINALIZER.
    // ******************************************************************

    // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    public void finalize() throws Throwable
    {
    }

    // ******************************************************************
    // PUBLIC METHODS       (general, getter, setter, interface imp)
    // ******************************************************************

    // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    /**
     * Convert to string. <p>
     *
     * @return The string.
     */
    public String toString()
    {
        StringBuilder sb = new StringBuilder(100);

        sb.append(this.getClass().getSimpleName());
        sb.append(":");

        return sb.toString();
    }

    // ******************************************************************
    // PROTECTED METHODS.
    // ******************************************************************

    // ******************************************************************
    // PRIVATE METHODS.
    // ******************************************************************

    // ******************************************************************
    // INNER CLASSES.
    // ******************************************************************

    // ******************************************************************
    // NATIVE METHODS.
    // ******************************************************************

    // ******************************************************************
    // MAIN.
    // ******************************************************************
    // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
}

//----------------------------------------------------------------------